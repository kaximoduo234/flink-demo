version: '3.8'

services:
  # 🚀 MySQL - 基础数据源
  mysql:
    image: mysql:8.4
    container_name: mysql
    restart: on-failure
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: flink_demo
      MYSQL_USER: flink
      MYSQL_PASSWORD: flink123
    volumes:
      - mysql-data:/var/lib/mysql
      - ./scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - flink-network

  # 🚀 JobManager - 快速启动
  jobmanager:
    build:
      context: .
      dockerfile: flink/Dockerfile
      args:
        - PAIMON_VERSION=1.0.0
        - FLINK_VERSION=1.20.1
      target: runtime
    image: custom-flink:1.20.1-paimon-optimized
    container_name: jobmanager
    ports:
      - "8081:8081"
      - "6123:6123"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 8
        parallelism.default: 1
        jobmanager.memory.process.size: 1g
        jobmanager.memory.flink.size: 800m
        execution.checkpointing.interval: 60s
        state.backend: filesystem
        state.checkpoints.dir: file:///opt/flink/checkpoints
    volumes:
      - ./target:/opt/flink/usrlib:ro
      - ./checkpoints:/opt/flink/checkpoints
      - ./paimon-warehouse:/warehouse
      - ./flink-jars:/opt/flink/lib/connectors:ro
    networks:
      - flink-network

  # 🚀 TaskManager - 并行启动
  taskmanager:
    build:
      context: .
      dockerfile: flink/Dockerfile
      args:
        - PAIMON_VERSION=1.0.0
        - FLINK_VERSION=1.20.1
      target: runtime
    image: custom-flink:1.20.1-paimon-optimized
    container_name: taskmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 8
        parallelism.default: 1
        taskmanager.memory.process.size: 2g
        taskmanager.memory.flink.size: 1600m
    volumes:
      - ./target:/opt/flink/usrlib:ro
      - ./checkpoints:/opt/flink/checkpoints
      - ./paimon-warehouse:/warehouse
      - ./flink-jars:/opt/flink/lib/connectors:ro
    networks:
      - flink-network

  # 🚀 SQL Gateway - 并行启动
  sql-gateway:
    build:
      context: .
      dockerfile: flink/Dockerfile
      args:
        - PAIMON_VERSION=1.0.0
        - FLINK_VERSION=1.20.1
      target: runtime
    image: custom-flink:1.20.1-paimon-optimized
    container_name: sql-gateway
    command: ["bin/sql-gateway.sh", "start-foreground"]
    ports:
      - "8083:8083"
    networks:
      - flink-network
    volumes:
      - ./target:/opt/flink/usrlib:ro
      - ./checkpoints:/opt/flink/checkpoints
      - ./paimon-warehouse:/warehouse
      - ./flink-jars:/opt/flink/lib/connectors:ro
      - ./scripts:/opt/scripts:ro
    environment:
      - |
        FLINK_PROPERTIES=
        sql-gateway.endpoint.rest.address: 0.0.0.0
        sql-gateway.endpoint.rest.port: 8083
        execution.target: remote
        jobmanager.rpc.address: jobmanager
        jobmanager.rpc.port: 6123
        rest.address: jobmanager
        rest.port: 8081
        execution.runtime-mode: streaming
        parallelism.default: 1
        table.exec.sink.upsert-materialize: NONE

  # 🚀 Redis - 基础服务
  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - flink-network

  # 🚀 StarRocks - 可选分析引擎
  starrocks:
    image: starrocks/allin1-ubuntu:3.5.0
    container_name: starrocks
    ports:
      - "8030:8030"
      - "9030:9030"
      - "8040:8040"
    networks:
      - flink-network
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./starrocks-storage:/opt/starrocks-storage

networks:
  flink-network:
    driver: bridge

volumes:
  mysql-data:
  paimon-warehouse:
  starrocks-storage: 