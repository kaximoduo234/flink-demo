services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - flink-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_NUM_PARTITIONS=2
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_HEAP_OPTS=-Xms256m -Xmx256m
      - KAFKA_CFG_LOG_RETENTION_HOURS=6
      - KAFKA_CFG_LOG_RETENTION_BYTES=268435456
    volumes:
      - ./kafka-data:/bitnami/kafka
    depends_on:
      - zookeeper
    networks:
      - flink-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=ods
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD=testpass
      - TZ=Asia/Shanghai
    command: [
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--log-bin=mysql-bin",
      "--binlog-format=ROW",
      "--binlog-row-image=FULL",
      "--server-id=1"
    ]
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./sql-scripts:/docker-entrypoint-initdb.d
    networks:
      - flink-network

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - flink-network

  jobmanager:
    build:
      context: .
      dockerfile: flink/Dockerfile
    image: custom-flink:1.20.1-paimon
    container_name: jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        parallelism.default: 1
    volumes:
      - ./target:/opt/flink/usrlib
      - ./checkpoints:/opt/flink/checkpoints
      - ./paimon-warehouse:/warehouse
    networks:
      - flink-network

  taskmanager:
    build:
      context: .
      dockerfile: flink/Dockerfile
    image: custom-flink:1.20.1-paimon
    container_name: taskmanager
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        parallelism.default: 1
    volumes:
      - ./target:/opt/flink/usrlib
      - ./checkpoints:/opt/flink/checkpoints
      - ./paimon-warehouse:/warehouse
    networks:
      - flink-network

  streampark:
    image: apache/streampark:2.1.5
    container_name: streampark
    restart: always
    ports:
      - "10000:10000"  # Web UI 默认端口
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - jobmanager
      - taskmanager
    networks:
      - flink-network

  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - flink-network

  doris-fe:
    build:
      context: ./doris
      dockerfile: fe-dockerfile
    container_name: doris-fe
    restart: on-failure
    ports:
      - "8030:8030"   # HTTP UI
      - "9030:9030"   # MySQL 接口
    networks:
      flink-network:
        ipv4_address: 172.20.0.10
    volumes:
      - ./doris/fe/conf:/opt/apache-doris/fe/conf
      - ./doris/fe/doris-meta:/opt/apache-doris/fe/doris-meta
      - ./doris/fe/log:/opt/apache-doris/fe/log
    environment:
      - JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
      - TZ=Asia/Shanghai
      - FE_SERVERS=fe1:172.20.0.10:9010
      - FE_ID=1

  doris-be:
    build:
      context: ./doris
      dockerfile: be-dockerfile
    container_name: doris-be
    depends_on:
      - doris-fe
    restart: on-failure
    ports:
      - "8040:8040"   # HTTP UI
      - "9050:9050"   # Heartbeat Port
    networks:
      flink-network:
        ipv4_address: 172.20.0.11
    volumes:
      - ./doris/be/conf:/opt/apache-doris/be/conf
      - ./doris/be/storage:/opt/apache-doris/be/storage
      - ./doris/be/log:/opt/apache-doris/be/log
    environment:
      - JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
      - TZ=Asia/Shanghai
      - FE_SERVERS=fe1:172.20.0.10:9010
      - BE_ADDR=172.20.0.11:9050
    command:
      - /bin/bash
      - -c
      - |
        echo "Waiting for Doris FE..."
        while ! nc -z 172.20.0.10 9030; do 
          echo "FE not ready, waiting..."
          sleep 2
        done
        echo "Starting BE"
        /opt/apache-doris/be/bin/start_be.sh


networks:
  flink-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  kafka-data:
  mysql-data:
  doris-fe-meta:
  doris-be-storage:
  paimon-warehouse: