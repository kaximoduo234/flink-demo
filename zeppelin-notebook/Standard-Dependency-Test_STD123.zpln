{
  "paragraphs": [
    {
      "text": "# 🏗️ Flink + Zeppelin 标准化依赖测试\n\n## 📋 测试目标\n- 验证标准化依赖是否完整\n- 测试 Scala 2.12 集成\n- 验证 Table API 和 SQL 功能\n- 确认实时流处理能力\n\n**基于专业依赖清单**: Flink 1.20.1 + Zeppelin 0.12.0 + Scala 2.12",
      "user": "anonymous",
      "dateUpdated": "2025-01-29T09:00:00Z",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1706518800000_-1",
      "id": "paragraph_1706518800000_-1",
      "dateCreated": "2025-01-29T09:00:00Z",
      "status": "READY"
    },
    {
      "text": "%flink.conf\n\n# 🔧 Flink 配置验证\nflink.execution.mode remote\nflink.execution.remote.host jobmanager\nflink.execution.remote.port 6123\nflink.scala.version 2.12\nflink.table.planner blink",
      "user": "anonymous",
      "dateUpdated": "2025-01-29T09:00:00Z",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/text",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "title": "Flink 配置"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1706518800001_-1",
      "id": "paragraph_1706518800001_-1",
      "dateCreated": "2025-01-29T09:00:00Z",
      "status": "READY"
    },
    {
      "text": "%flink.ssql\n\n-- 🎯 测试 1: 基础连接验证\nSHOW CATALOGS;",
      "user": "anonymous",
      "dateUpdated": "2025-01-29T09:00:00Z",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "title": "测试 1: 基础连接"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1706518800002_-1",
      "id": "paragraph_1706518800002_-1",
      "dateCreated": "2025-01-29T09:00:00Z",
      "status": "READY"
    },
    {
      "text": "%flink.ssql\n\n-- 🧪 测试 2: Scala 依赖验证\n-- 创建使用 Scala 特性的测试表\nCREATE TEMPORARY TABLE scala_test_table (\n    id INT,\n    name STRING,\n    age INT,\n    create_time TIMESTAMP(3),\n    WATERMARK FOR create_time AS create_time - INTERVAL '5' SECOND\n) WITH (\n    'connector' = 'datagen',\n    'rows-per-second' = '1',\n    'fields.id.kind' = 'sequence',\n    'fields.id.start' = '1',\n    'fields.id.end' = '1000',\n    'fields.name.length' = '8',\n    'fields.age.min' = '18',\n    'fields.age.max' = '65'\n);",
      "user": "anonymous",
      "dateUpdated": "2025-01-29T09:00:00Z",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "title": "测试 2: Scala 依赖验证"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1706518800003_-1",
      "id": "paragraph_1706518800003_-1",
      "dateCreated": "2025-01-29T09:00:00Z",
      "status": "READY"
    },
    {
      "text": "%flink.ssql\n\n-- 📊 测试 3: Table API 和 SQL 集成\n-- 验证 Table Planner 和 Scala Bridge 正常工作\nSELECT \n    id,\n    name,\n    age,\n    create_time,\n    CASE \n        WHEN age < 25 THEN '青年'\n        WHEN age < 50 THEN '中年'\n        ELSE '老年'\n    END as age_group\nFROM scala_test_table \nLIMIT 5;",
      "user": "anonymous",
      "dateUpdated": "2025-01-29T09:00:00Z",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "title": "测试 3: Table API 集成"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1706518800004_-1",
      "id": "paragraph_1706518800004_-1",
      "dateCreated": "2025-01-29T09:00:00Z",
      "status": "READY"
    },
    {
      "text": "%flink.ssql\n\n-- 🔄 测试 4: 实时聚合验证\n-- 测试 Flink 的流处理能力和 Scala 集成\nSELECT \n    COUNT(*) as total_records,\n    AVG(age) as avg_age,\n    MIN(age) as min_age,\n    MAX(age) as max_age,\n    COUNT(DISTINCT SUBSTRING(name, 1, 1)) as unique_first_chars\nFROM scala_test_table;",
      "user": "anonymous",
      "dateUpdated": "2025-01-29T09:00:00Z",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "title": "测试 4: 实时聚合"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1706518800005_-1",
      "id": "paragraph_1706518800005_-1",
      "dateCreated": "2025-01-29T09:00:00Z",
      "status": "READY"
    },
    {
      "text": "%flink.ssql\n\n-- 💾 测试 5: 复杂数据类型验证\n-- 验证 Scala 对复杂数据类型的支持\nCREATE TEMPORARY TABLE complex_data_test (\n    id INT,\n    user_info ROW<name STRING, age INT, email STRING>,\n    tags ARRAY<STRING>,\n    metadata MAP<STRING, STRING>,\n    event_time TIMESTAMP(3),\n    WATERMARK FOR event_time AS event_time - INTERVAL '1' MINUTE\n) WITH (\n    'connector' = 'datagen',\n    'rows-per-second' = '2',\n    'fields.id.kind' = 'sequence',\n    'fields.id.start' = '1',\n    'fields.id.end' = '100'\n);",
      "user": "anonymous",
      "dateUpdated": "2025-01-29T09:00:00Z",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "title": "测试 5: 复杂数据类型"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1706518800006_-1",
      "id": "paragraph_1706518800006_-1",
      "dateCreated": "2025-01-29T09:00:00Z",
      "status": "READY"
    },
    {
      "text": "%flink.ssql\n\n-- 🔍 测试 6: 复杂查询验证\nSELECT \n    id,\n    user_info.name as user_name,\n    user_info.age as user_age,\n    CARDINALITY(tags) as tag_count,\n    SIZE(metadata) as metadata_size\nFROM complex_data_test\nLIMIT 3;",
      "user": "anonymous",
      "dateUpdated": "2025-01-29T09:00:00Z",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "results": {},
        "enabled": true,
        "title": "测试 6: 复杂查询"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1706518800007_-1",
      "id": "paragraph_1706518800007_-1",
      "dateCreated": "2025-01-29T09:00:00Z",
      "status": "READY"
    },
    {
      "text": "# ✅ 测试结果总结\n\n## 🎯 标准化依赖验证结果:\n\n1. **基础连接**: 如果 `SHOW CATALOGS` 成功，说明 Flink 核心组件正常\n2. **Scala 集成**: 数据生成器表创建成功，说明 Scala 依赖完整\n3. **Table API**: 复杂查询执行成功，说明 Table Planner 和 Scala Bridge 正常工作\n4. **流处理**: 实时聚合运行正常，说明流处理引擎完全可用\n5. **复杂数据类型**: ROW、ARRAY、MAP 类型支持完整\n\n## 📊 依赖完整性指标:\n\n- ✅ **scala-library-2.12.18.jar**: Scala 标准库\n- ✅ **flink-dist-1.20.1.jar**: Flink 核心发行版\n- ✅ **flink-scala_2.12-1.20.1.jar**: Flink Scala 支持\n- ✅ **flink-table-api-scala-bridge_2.12-1.20.1.jar**: Scala Table API 桥接\n- ✅ **flink-table-planner_2.12-1.20.1.jar**: Blink Planner\n\n## 🚀 下一步建议:\n\n1. 如果所有测试通过，环境已符合业界标准\n2. 可以开始构建生产级的 Flink 应用\n3. 集成 Kafka、MySQL、StarRocks 等外部系统\n4. 开发自定义 UDF 和连接器\n\n---\n\n**🏆 这个 Notebook 验证了基于专业依赖清单的标准化 Flink + Zeppelin 环境！**",
      "user": "anonymous",
      "dateUpdated": "2025-01-29T09:00:00Z",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1706518800008_-1",
      "id": "paragraph_1706518800008_-1",
      "dateCreated": "2025-01-29T09:00:00Z",
      "status": "READY"
    }
  ],
  "name": "Standard-Dependency-Test_STD123",
  "id": "2PZ8K3XQM",
  "defaultInterpreterGroup": "flink",
  "version": "0.12.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {
    "isRunning": false
  },
  "path": "/Standard-Dependency-Test_STD123"
} 